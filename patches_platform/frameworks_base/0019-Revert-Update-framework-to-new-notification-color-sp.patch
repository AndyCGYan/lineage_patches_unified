From ddefb3aa749044a6b4838687f669c390512c6711 Mon Sep 17 00:00:00 2001
From: Andy CrossGate Yan <GeForce8800Ultra@gmail.com>
Date: Thu, 4 Apr 2024 18:26:08 +0800
Subject: [PATCH 19/43] Revert "Update framework to new notification color
 spec"

This reverts commit 6063e254e0cc84243e3a3fb85fe1bff71b302a87.
---
 core/java/android/app/Notification.java       | 50 ++++---------------
 core/res/res/values/colors.xml                |  9 ++--
 .../src/android/app/NotificationTest.java     |  9 ----
 3 files changed, 15 insertions(+), 53 deletions(-)

diff --git a/core/java/android/app/Notification.java b/core/java/android/app/Notification.java
index baecf785a8af..671b8d4153c5 100644
--- a/core/java/android/app/Notification.java
+++ b/core/java/android/app/Notification.java
@@ -5718,8 +5718,7 @@ public class Notification implements Parcelable
             contentView.setInt(R.id.expand_button, "setDefaultPillColor", pillColor);
             // Use different highlighted colors for conversations' unread count
             if (p.mHighlightExpander) {
-                pillColor = Colors.flattenAlpha(
-                        getColors(p).getTertiaryFixedDimAccentColor(), bgColor);
+                pillColor = Colors.flattenAlpha(getColors(p).getTertiaryAccentColor(), bgColor);
                 textColor = Colors.flattenAlpha(
                         getColors(p).getOnTertiaryAccentTextColor(), pillColor);
             }
@@ -12944,9 +12943,6 @@ public class Notification implements Parcelable
         private int mSecondaryAccentColor = COLOR_INVALID;
         private int mTertiaryAccentColor = COLOR_INVALID;
         private int mOnTertiaryAccentTextColor = COLOR_INVALID;
-        private int mTertiaryFixedDimAccentColor = COLOR_INVALID;
-        private int mOnTertiaryFixedAccentTextColor = COLOR_INVALID;
-
         private int mErrorColor = COLOR_INVALID;
         private int mContrastColor = COLOR_INVALID;
         private int mRippleAlpha = 0x33;
@@ -13004,7 +13000,7 @@ public class Notification implements Parcelable
 
             if (isColorized) {
                 if (rawColor == COLOR_DEFAULT) {
-                    int[] attrs = {R.attr.materialColorSecondary};
+                    int[] attrs = {R.attr.colorAccentSecondary};
                     try (TypedArray ta = obtainDayNightAttributes(ctx, attrs)) {
                         mBackgroundColor = getColor(ta, 0, Color.WHITE);
                     }
@@ -13022,21 +13018,17 @@ public class Notification implements Parcelable
                 mSecondaryAccentColor = mSecondaryTextColor;
                 mTertiaryAccentColor = flattenAlpha(mPrimaryTextColor, mBackgroundColor);
                 mOnTertiaryAccentTextColor = mBackgroundColor;
-                mTertiaryFixedDimAccentColor = mTertiaryAccentColor;
-                mOnTertiaryFixedAccentTextColor = mOnTertiaryAccentTextColor;
                 mErrorColor = mPrimaryTextColor;
                 mRippleAlpha = 0x33;
             } else {
                 int[] attrs = {
-                        R.attr.materialColorSurfaceContainerHigh,
-                        R.attr.materialColorOnSurface,
-                        R.attr.materialColorOnSurfaceVariant,
-                        R.attr.materialColorPrimary,
-                        R.attr.materialColorSecondary,
-                        R.attr.materialColorTertiary,
-                        R.attr.materialColorOnTertiary,
-                        R.attr.materialColorTertiaryFixedDim,
-                        R.attr.materialColorOnTertiaryFixed,
+                        R.attr.colorSurface,
+                        R.attr.textColorPrimary,
+                        R.attr.textColorSecondary,
+                        R.attr.colorAccent,
+                        R.attr.colorAccentSecondary,
+                        R.attr.colorAccentTertiary,
+                        R.attr.textColorOnAccent,
                         R.attr.colorError,
                         R.attr.colorControlHighlight
                 };
@@ -13048,10 +13040,8 @@ public class Notification implements Parcelable
                     mSecondaryAccentColor = getColor(ta, 4, COLOR_INVALID);
                     mTertiaryAccentColor = getColor(ta, 5, COLOR_INVALID);
                     mOnTertiaryAccentTextColor = getColor(ta, 6, COLOR_INVALID);
-                    mTertiaryFixedDimAccentColor = getColor(ta, 7, COLOR_INVALID);
-                    mOnTertiaryFixedAccentTextColor = getColor(ta, 8, COLOR_INVALID);
-                    mErrorColor = getColor(ta, 9, COLOR_INVALID);
-                    mRippleAlpha = Color.alpha(getColor(ta, 10, 0x33ffffff));
+                    mErrorColor = getColor(ta, 7, COLOR_INVALID);
+                    mRippleAlpha = Color.alpha(getColor(ta, 8, 0x33ffffff));
                 }
                 mContrastColor = calculateContrastColor(ctx, rawColor, mPrimaryAccentColor,
                         mBackgroundColor, nightMode);
@@ -13079,14 +13069,6 @@ public class Notification implements Parcelable
                             ContrastColorUtil.resolvePrimaryColor(
                                     ctx, mTertiaryAccentColor, nightMode), 0xFF);
                 }
-                if (mTertiaryFixedDimAccentColor == COLOR_INVALID) {
-                    mTertiaryFixedDimAccentColor = mContrastColor;
-                }
-                if (mOnTertiaryFixedAccentTextColor == COLOR_INVALID) {
-                    mOnTertiaryFixedAccentTextColor = ColorUtils.setAlphaComponent(
-                            ContrastColorUtil.resolvePrimaryColor(
-                                    ctx, mTertiaryFixedDimAccentColor, nightMode), 0xFF);
-                }
                 if (mErrorColor == COLOR_INVALID) {
                     mErrorColor = mPrimaryTextColor;
                 }
@@ -13160,16 +13142,6 @@ public class Notification implements Parcelable
             return mOnTertiaryAccentTextColor;
         }
 
-        /** @return the theme's tertiary fixed dim accent color for colored UI elements. */
-        public @ColorInt int getTertiaryFixedDimAccentColor() {
-            return mTertiaryFixedDimAccentColor;
-        }
-
-        /** @return the theme's text color to be used on the tertiary fixed accent color. */
-        public @ColorInt int getOnTertiaryFixedAccentTextColor() {
-            return mOnTertiaryFixedAccentTextColor;
-        }
-
         /**
          * @return the contrast-adjusted version of the color provided by the app, or the
          * primary text color when colorized.
diff --git a/core/res/res/values/colors.xml b/core/res/res/values/colors.xml
index d8191c0c3597..b4139f343fa5 100644
--- a/core/res/res/values/colors.xml
+++ b/core/res/res/values/colors.xml
@@ -135,12 +135,11 @@
     <drawable name="notification_template_icon_low_bg">#0cffffff</drawable>
     <drawable name="notification_template_divider">#29000000</drawable>
     <drawable name="notification_template_divider_media">#29ffffff</drawable>
-    <color name="notification_primary_text_color_light">@color/system_on_surface_light</color>
-    <color name="notification_primary_text_color_dark">@color/system_on_surface_dark</color>
-    <!-- Note that the primary and secondary notification text colors are, in fact, the same. -->
-    <color name="notification_secondary_text_color_light">@color/system_on_surface_light</color>
-    <color name="notification_secondary_text_color_dark">@color/system_on_surface_dark</color>
+    <color name="notification_primary_text_color_light">@color/primary_text_default_material_light</color>
+    <color name="notification_primary_text_color_dark">@color/primary_text_default_material_dark</color>
+    <color name="notification_secondary_text_color_light">@color/primary_text_default_material_light</color>
     <item name="notification_secondary_text_disabled_alpha" format="float" type="dimen">0.38</item>
+    <color name="notification_secondary_text_color_dark">@color/primary_text_default_material_dark</color>
     <color name="notification_default_color_dark">#ddffffff</color>
     <color name="notification_default_color_light">#a3202124</color>
 
diff --git a/core/tests/coretests/src/android/app/NotificationTest.java b/core/tests/coretests/src/android/app/NotificationTest.java
index 5b0502da1bdf..297f8254ded1 100644
--- a/core/tests/coretests/src/android/app/NotificationTest.java
+++ b/core/tests/coretests/src/android/app/NotificationTest.java
@@ -859,10 +859,6 @@ public class NotificationTest {
             assertEquals(cDay.getTertiaryAccentColor(), cNight.getTertiaryAccentColor());
             assertEquals(cDay.getOnTertiaryAccentTextColor(),
                     cNight.getOnTertiaryAccentTextColor());
-            assertEquals(cDay.getTertiaryFixedDimAccentColor(),
-                    cNight.getTertiaryFixedDimAccentColor());
-            assertEquals(cDay.getOnTertiaryFixedAccentTextColor(),
-                    cNight.getOnTertiaryFixedAccentTextColor());
             assertEquals(cDay.getProtectionColor(), cNight.getProtectionColor());
             assertEquals(cDay.getContrastColor(), cNight.getContrastColor());
             assertEquals(cDay.getRippleAlpha(), cNight.getRippleAlpha());
@@ -1844,8 +1840,6 @@ public class NotificationTest {
         assertThat(c.getSecondaryAccentColor()).isNotEqualTo(Notification.COLOR_INVALID);
         assertThat(c.getTertiaryAccentColor()).isNotEqualTo(Notification.COLOR_INVALID);
         assertThat(c.getOnTertiaryAccentTextColor()).isNotEqualTo(Notification.COLOR_INVALID);
-        assertThat(c.getTertiaryFixedDimAccentColor()).isNotEqualTo(Notification.COLOR_INVALID);
-        assertThat(c.getOnTertiaryFixedAccentTextColor()).isNotEqualTo(Notification.COLOR_INVALID);
         assertThat(c.getErrorColor()).isNotEqualTo(Notification.COLOR_INVALID);
         assertThat(c.getContrastColor()).isNotEqualTo(Notification.COLOR_INVALID);
         assertThat(c.getRippleAlpha()).isAtLeast(0x00);
@@ -1861,12 +1855,9 @@ public class NotificationTest {
         // These colors are only used for emphasized buttons; they do not need contrast
         assertContrastIsAtLeast(c.getSecondaryAccentColor(), c.getBackgroundColor(), 1);
         assertContrastIsAtLeast(c.getTertiaryAccentColor(), c.getBackgroundColor(), 1);
-        assertContrastIsAtLeast(c.getTertiaryFixedDimAccentColor(), c.getBackgroundColor(), 1);
 
         // The text that is used within the accent color DOES need to have contrast
         assertContrastIsAtLeast(c.getOnTertiaryAccentTextColor(), c.getTertiaryAccentColor(), 4.5);
-        assertContrastIsAtLeast(c.getOnTertiaryFixedAccentTextColor(),
-                c.getTertiaryFixedDimAccentColor(), 4.5);
     }
 
     private void resolveColorsInNightMode(boolean nightMode, Notification.Colors c, int rawColor,
-- 
2.34.1

