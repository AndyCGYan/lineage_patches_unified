From c252c4da39549242a435c3bc66a02814c14a6eaa Mon Sep 17 00:00:00 2001
From: koron393 <koron393@gmail.com>
Date: Fri, 20 Jan 2023 05:41:13 +0900
Subject: [PATCH 3/6] Bring back traffic indicators for legacy devices

Revert: "remove qtaguid parsing"
(commit 0b99c46bcde8e607d9233c474035da95ab68a6fe.)
and re-enable legacy qtguid parsing.

This fixes traffic indicator on BPF-less kernel.

Change-Id: I65c626c1c5832d81805c45c53b021236fe09030b
Signed-off-by: koron393 <koron393@gmail.com>
---
 ...android_server_net_NetworkStatsService.cpp | 84 ++++++++++++++++++-
 1 file changed, 81 insertions(+), 3 deletions(-)

diff --git a/service-t/jni/com_android_server_net_NetworkStatsService.cpp b/service-t/jni/com_android_server_net_NetworkStatsService.cpp
index c99939864d..741f13c7ed 100644
--- a/service-t/jni/com_android_server_net_NetworkStatsService.cpp
+++ b/service-t/jni/com_android_server_net_NetworkStatsService.cpp
@@ -39,6 +39,9 @@ using android::bpf::NetworkTraceHandler;
 
 namespace android {
 
+static const char* QTAGUID_IFACE_STATS = "/proc/net/xt_qtaguid/iface_stat_fmt";
+static const char* QTAGUID_UID_STATS = "/proc/net/xt_qtaguid/stats";
+
 static void nativeRegisterIface(JNIEnv* env, jclass clazz, jstring iface) {
     ScopedUtfChars iface8(env, iface);
     if (iface8.c_str() == nullptr) return;
@@ -73,13 +76,80 @@ static jobject statsValueToEntry(JNIEnv* env, StatsValue* stats) {
     return result;
 }
 
+static int parseIfaceStats(const char* iface, StatsValue* stats) {
+    FILE *fp = fopen(QTAGUID_IFACE_STATS, "r");
+    if (fp == NULL) {
+        return -1;
+    }
+
+    char buffer[384];
+    char cur_iface[32];
+    uint64_t rxBytes, rxPackets, txBytes, txPackets, tcpRxPackets, tcpTxPackets;
+
+    while (fgets(buffer, sizeof(buffer), fp) != NULL) {
+        int matched = sscanf(buffer, "%31s %" SCNu64 " %" SCNu64 " %" SCNu64
+                " %" SCNu64 " " "%*u %" SCNu64 " %*u %*u %*u %*u "
+                "%*u %" SCNu64 " %*u %*u %*u %*u", cur_iface, &rxBytes,
+                &rxPackets, &txBytes, &txPackets, &tcpRxPackets, &tcpTxPackets);
+        if (matched >= 5) {
+            if (!iface || !strcmp(iface, cur_iface)) {
+                stats->rxBytes += rxBytes;
+                stats->rxPackets += rxPackets;
+                stats->txBytes += txBytes;
+                stats->txPackets += txPackets;
+            }
+        }
+    }
+
+    if (fclose(fp) != 0) {
+        return -1;
+    }
+    return 0;
+}
+
+static int parseUidStats(const uint32_t uid, StatsValue* stats) {
+    FILE *fp = fopen(QTAGUID_UID_STATS, "r");
+    if (fp == NULL) {
+        return -1;
+    }
+
+    char buffer[384];
+    char iface[32];
+    uint32_t idx, cur_uid, set;
+    uint64_t tag, rxBytes, rxPackets, txBytes, txPackets;
+
+    while (fgets(buffer, sizeof(buffer), fp) != NULL) {
+        if (sscanf(buffer,
+                "%" SCNu32 " %31s 0x%" SCNx64 " %u %u %" SCNu64 " %" SCNu64
+                " %" SCNu64 " %" SCNu64 "",
+                &idx, iface, &tag, &cur_uid, &set, &rxBytes, &rxPackets,
+                &txBytes, &txPackets) == 9) {
+            if (uid == cur_uid && tag == 0L) {
+                stats->rxBytes += rxBytes;
+                stats->rxPackets += rxPackets;
+                stats->txBytes += txBytes;
+                stats->txPackets += txPackets;
+            }
+        }
+    }
+
+    if (fclose(fp) != 0) {
+        return -1;
+    }
+    return 0;
+}
+
 static jobject nativeGetTotalStat(JNIEnv* env, jclass clazz) {
     StatsValue stats = {};
 
     if (bpfGetIfaceStats(nullptr, &stats) == 0) {
         return statsValueToEntry(env, &stats);
     } else {
-        return nullptr;
+        if (parseIfaceStats(nullptr, &stats) == 0) {
+            return statsValueToEntry(env, &stats);
+        } else {
+            return nullptr;
+        }
     }
 }
 
@@ -94,7 +164,11 @@ static jobject nativeGetIfaceStat(JNIEnv* env, jclass clazz, jstring iface) {
     if (bpfGetIfaceStats(iface8.c_str(), &stats) == 0) {
         return statsValueToEntry(env, &stats);
     } else {
-        return nullptr;
+        if (parseIfaceStats(iface8.c_str(), &stats) == 0) {
+            return statsValueToEntry(env, &stats);
+        } else {
+            return nullptr;
+        }
     }
 }
 
@@ -104,7 +178,11 @@ static jobject nativeGetUidStat(JNIEnv* env, jclass clazz, jint uid) {
     if (bpfGetUidStats(uid, &stats) == 0) {
         return statsValueToEntry(env, &stats);
     } else {
-        return nullptr;
+        if (parseUidStats(uid, &stats) == 0) {
+            return statsValueToEntry(env, &stats);
+        } else {
+            return nullptr;
+        }
     }
 }
 
-- 
2.34.1

