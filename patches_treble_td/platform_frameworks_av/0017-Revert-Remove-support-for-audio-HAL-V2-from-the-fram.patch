From eae358283867bea937c4b9575e352a195d2def54 Mon Sep 17 00:00:00 2001
From: Andy CrossGate Yan <GeForce8800Ultra@gmail.com>
Date: Mon, 11 Oct 2021 16:10:42 -0400
Subject: [PATCH 17/24] Revert "Remove support for audio HAL V2 from the
 framework"

This reverts commit cbf517f837f7bf8a59f3ff8aa1e0e3e19612e251.

Also enable new extensions required to actually build

Change-Id: Icfd638a91b22ffa6d2cd6d19a624e699a85a850a
---
 media/libaudiohal/Android.bp                  |  1 +
 media/libaudiohal/FactoryHal.cpp              |  3 ++-
 media/libaudiohal/impl/Android.bp             | 26 +++++++++++++++++++
 media/libaudiohal/impl/DeviceHalHidl.cpp      | 10 +++++++
 .../impl/DevicesFactoryHalHidl.cpp            |  4 +++
 5 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/media/libaudiohal/Android.bp b/media/libaudiohal/Android.bp
index b8d099897f..e4a11a3fa8 100644
--- a/media/libaudiohal/Android.bp
+++ b/media/libaudiohal/Android.bp
@@ -23,6 +23,7 @@ cc_library_shared {
     ],
 
     required: [
+        "libaudiohal@2.0",
         "libaudiohal@5.0",
         "libaudiohal@6.0",
         "libaudiohal@7.0",
diff --git a/media/libaudiohal/FactoryHal.cpp b/media/libaudiohal/FactoryHal.cpp
index 15cb297b5c..c922dd184d 100644
--- a/media/libaudiohal/FactoryHal.cpp
+++ b/media/libaudiohal/FactoryHal.cpp
@@ -50,12 +50,13 @@ using InterfaceName = std::pair<std::string, std::string>;
  * This list need to keep sync with AudioHalVersionInfo.VERSIONS in
  * media/java/android/media/AudioHalVersionInfo.java.
  */
-static const std::array<AudioHalVersionInfo, 5> sAudioHALVersions = {
+static const std::array<AudioHalVersionInfo, 6> sAudioHALVersions = {
     AudioHalVersionInfo(AudioHalVersionInfo::Type::AIDL, 1, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 7, 1),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 7, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 6, 0),
     AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 5, 0),
+    AudioHalVersionInfo(AudioHalVersionInfo::Type::HIDL, 2, 0),
 };
 
 static const std::map<AudioHalVersionInfo::Type, InterfaceName> sDevicesHALInterfaces = {
diff --git a/media/libaudiohal/impl/Android.bp b/media/libaudiohal/impl/Android.bp
index 4d81f77d8e..23d7f0465b 100644
--- a/media/libaudiohal/impl/Android.bp
+++ b/media/libaudiohal/impl/Android.bp
@@ -82,6 +82,32 @@ cc_defaults {
     ],
 }
 
+cc_library_shared {
+    name: "libaudiohal@2.0",
+    defaults: [
+        "libaudiohal_default",
+        "libaudiohal_hidl_default"
+    ],
+    srcs: [
+        ":audio_core_hal_client_sources",
+        ":audio_effect_hidl_hal_client_sources",
+        "EffectsFactoryHalEntry.cpp",
+    ],
+    shared_libs: [
+        "android.hardware.audio.common@2.0",
+        "android.hardware.audio.common@2.0-util",
+        "android.hardware.audio.effect@2.0",
+        "android.hardware.audio.effect@2.0-util",
+        "android.hardware.audio@2.0",
+        "android.hardware.audio@2.0-util",
+    ],
+    cflags: [
+        "-DMAJOR_VERSION=2",
+        "-DMINOR_VERSION=0",
+        "-include common/all-versions/VersionMacro.h",
+    ]
+}
+
 cc_library_shared {
     name: "libaudiohal@5.0",
     defaults: [
diff --git a/media/libaudiohal/impl/DeviceHalHidl.cpp b/media/libaudiohal/impl/DeviceHalHidl.cpp
index ea4258c878..4d4e8a8717 100644
--- a/media/libaudiohal/impl/DeviceHalHidl.cpp
+++ b/media/libaudiohal/impl/DeviceHalHidl.cpp
@@ -587,6 +587,7 @@ status_t DeviceHalHidl::setConnectedState(const struct audio_port_v7 *port, bool
         // call is successful. Also remove the cache here to avoid a large cache after a long run.
         return NO_ERROR;
     }
+#if MAJOR_VERSION > 2
 #if MAJOR_VERSION == 7 && MINOR_VERSION == 1
     if (supportsSetConnectedState7_1) {
         AudioPort hidlPort;
@@ -609,11 +610,17 @@ status_t DeviceHalHidl::setConnectedState(const struct audio_port_v7 *port, bool
         return result;
     }
     return processReturn("setConnectedState", mDevice->setConnectedState(hidlAddress, connected));
+#else
+    (void) port;
+    (void) connected;
+    return NO_ERROR;
+#endif
 }
 
 error::Result<audio_hw_sync_t> DeviceHalHidl::getHwAvSync() {
     TIME_CHECK();
     if (mDevice == 0) return NO_INIT;
+#if MAJOR_VERSION > 2
     audio_hw_sync_t value;
     Result result;
     Return<void> ret = mDevice->getHwAvSync([&value, &result](Result r, audio_hw_sync_t v) {
@@ -622,6 +629,9 @@ error::Result<audio_hw_sync_t> DeviceHalHidl::getHwAvSync() {
     });
     RETURN_IF_ERROR(processReturn("getHwAvSync", ret, result));
     return value;
+#else
+    return 0xdeadbeef;
+#endif
 }
 
 status_t DeviceHalHidl::dump(int fd, const Vector<String16>& args) {
diff --git a/media/libaudiohal/impl/DevicesFactoryHalHidl.cpp b/media/libaudiohal/impl/DevicesFactoryHalHidl.cpp
index 1cac9dab76..78c0c56416 100644
--- a/media/libaudiohal/impl/DevicesFactoryHalHidl.cpp
+++ b/media/libaudiohal/impl/DevicesFactoryHalHidl.cpp
@@ -119,6 +119,7 @@ status_t DevicesFactoryHalHidl::openDevice(const char *name, sp<DeviceHalInterfa
     Result retval = Result::NOT_INITIALIZED;
     for (const auto& factory : factories) {
         Return<void> ret;
+#if MAJOR_VERSION > 2
         if (strcmp(name, AUDIO_HARDWARE_MODULE_ID_PRIMARY) == 0) {
             // In V7.1 it's not possible to cast IDevice back to IPrimaryDevice,
             // thus openPrimaryDevice must be used.
@@ -135,6 +136,9 @@ status_t DevicesFactoryHalHidl::openDevice(const char *name, sp<DeviceHalInterfa
                         }
                     });
         } else {
+#else
+        if (true) {
+#endif
 #if MAJOR_VERSION == 7 && MINOR_VERSION == 1
             ret = factory->openDevice_7_1(
 #else
-- 
2.34.1

