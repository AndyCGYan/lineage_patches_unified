From 94c32f8dc4f427938340a1b5c704153561e44e06 Mon Sep 17 00:00:00 2001
From: Andy CrossGate Yan <GeForce8800Ultra@gmail.com>
Date: Sun, 26 May 2024 21:32:44 +0800
Subject: [PATCH 8/9] TrebleSettings: Disable SF HWC backpressure

Change-Id: I4d6a1d43222a8e4dec202056a14b1b1ce41e33d3
---
 res/values/strings.xml                        |  4 ++
 res/xml/treble_settings.xml                   |  5 ++
 ...SfHwcBackpressurePreferenceController.java | 53 +++++++++++++++++++
 .../settings/treble/TrebleSettings.java       |  1 +
 4 files changed, 63 insertions(+)
 create mode 100644 src/com/android/settings/treble/DisableSfHwcBackpressurePreferenceController.java

diff --git a/res/values/strings.xml b/res/values/strings.xml
index cd79f4d3ed3..b9bed8d56b5 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -7372,6 +7372,10 @@
     <string name="use_alternative_backlight_scale_title">Use alternative backlight scale</string>
     <!-- Treble settings screen, override minimum brightness title -->
     <string name="override_minimum_brightness_title">Override minimum brightness</string>
+    <!-- Treble settings screen, disable SF HWC backpressure title -->
+    <string name="disable_sf_hwc_backpressure_title">Disable SF HWC backpressure</string>
+    <!-- Treble settings screen, disable SF HWC backpressure summary -->
+    <string name="disable_sf_hwc_backpressure_summary">Might improve rendering performance</string>
     <!-- Treble settings screen, install IMS APK title -->
     <string name="install_ims_apk_title">Install IMS APK</string>
     <!-- Treble settings screen, install IMS APK toasts -->
diff --git a/res/xml/treble_settings.xml b/res/xml/treble_settings.xml
index 250a8ee75ae..4e3bef9b644 100644
--- a/res/xml/treble_settings.xml
+++ b/res/xml/treble_settings.xml
@@ -42,6 +42,11 @@
             android:key="override_minimum_brightness"
             android:title="@string/override_minimum_brightness_title" />
 
+        <SwitchPreference
+            android:key="disable_sf_hwc_backpressure"
+            android:title="@string/disable_sf_hwc_backpressure_title"
+            android:summary="@string/disable_sf_hwc_backpressure_summary" />
+
     </PreferenceCategory>
 
     <PreferenceCategory
diff --git a/src/com/android/settings/treble/DisableSfHwcBackpressurePreferenceController.java b/src/com/android/settings/treble/DisableSfHwcBackpressurePreferenceController.java
new file mode 100644
index 00000000000..8ba77738b58
--- /dev/null
+++ b/src/com/android/settings/treble/DisableSfHwcBackpressurePreferenceController.java
@@ -0,0 +1,53 @@
+package com.android.settings.treble;
+
+import android.content.Context;
+import android.os.SystemProperties;
+
+import androidx.preference.Preference;
+import androidx.preference.PreferenceScreen;
+import androidx.preference.SwitchPreference;
+
+import com.android.settings.core.BasePreferenceController;
+
+public class DisableSfHwcBackpressurePreferenceController extends BasePreferenceController
+        implements Preference.OnPreferenceChangeListener {
+
+    private static final String DISABLE_SF_HWC_BACKPRESSURE_KEY = "disable_sf_hwc_backpressure";
+    private static final String TREBLE_ENABLE_SF_HWC_BACKPRESSURE_PROPERTY = "persist.sys.treble.enable_sf_hwc_backpressure";
+
+    private SwitchPreference mSwitchPreference;
+
+    public DisableSfHwcBackpressurePreferenceController(Context context) {
+        super(context, DISABLE_SF_HWC_BACKPRESSURE_KEY);
+    }
+
+    @Override
+    public int getAvailabilityStatus() {
+        return AVAILABLE;
+    }
+
+    @Override
+    public String getPreferenceKey() {
+        return DISABLE_SF_HWC_BACKPRESSURE_KEY;
+    }
+
+    @Override
+    public void displayPreference(PreferenceScreen screen) {
+        mSwitchPreference = screen.findPreference(getPreferenceKey());
+        super.displayPreference(screen);
+    }
+
+    @Override
+    public void updateState(Preference preference) {
+        boolean checked = !SystemProperties.getBoolean(TREBLE_ENABLE_SF_HWC_BACKPRESSURE_PROPERTY, true);
+        mSwitchPreference.setChecked(checked);
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        SystemProperties.set(TREBLE_ENABLE_SF_HWC_BACKPRESSURE_PROPERTY, String.valueOf(!(boolean) newValue));
+        mSwitchPreference.setChecked((boolean) newValue);
+        return true;
+    }
+
+}
diff --git a/src/com/android/settings/treble/TrebleSettings.java b/src/com/android/settings/treble/TrebleSettings.java
index 634b7ce3ce1..f72a3cb9ed7 100644
--- a/src/com/android/settings/treble/TrebleSettings.java
+++ b/src/com/android/settings/treble/TrebleSettings.java
@@ -39,6 +39,7 @@ public class TrebleSettings extends DashboardFragment {
         controllers.add(new ScreenResolutionRefreshRatePreferenceController(context));
         controllers.add(new UseAlternativeBacklightScalePreferenceController(context));
         controllers.add(new OverrideMinimumBrightnessPreferenceController(context));
+        controllers.add(new DisableSfHwcBackpressurePreferenceController(context));
         controllers.add(new InstallImsApkPreferenceController(context));
         controllers.add(new OverrideVolteAvailabilityPreferenceController(context));
         controllers.add(new OverrideNavbarAvailabilityPreferenceController(context));
-- 
2.34.1

