From e6b2a294c9a2fa8c688c9a99a889d205ae68a4ee Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Mon, 12 Aug 2019 23:08:26 +0200
Subject: [PATCH 07/35] Add support for samsung touch, physical and hover
 proximity sensor as fallback to real proximity sensor

Change-Id: I7a0f8b4665c802140d19197d850b77b2a7ac1865
---
 .../display/DisplayPowerController.java       | 35 +++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/services/core/java/com/android/server/display/DisplayPowerController.java b/services/core/java/com/android/server/display/DisplayPowerController.java
index d590ae8fa6d0..2bdad4cf61e2 100644
--- a/services/core/java/com/android/server/display/DisplayPowerController.java
+++ b/services/core/java/com/android/server/display/DisplayPowerController.java
@@ -1741,6 +1741,27 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
                 ? Sensor.TYPE_PROXIMITY : SensorUtils.NO_FALLBACK;
         mProximitySensor = SensorUtils.findSensor(mSensorManager, proxSensor.type, proxSensor.name,
                 fallbackType);
+        if(mProximitySensor == null) {
+            java.util.List<Sensor> sensors = mSensorManager.getSensorList(Sensor.TYPE_ALL);
+            for(Sensor sensor: sensors) {
+                if("com.samsung.sensor.physical_proximity".equals(sensor.getStringType()))
+                    mProximitySensor = sensor;
+            }
+        }
+        if(mProximitySensor == null) {
+            java.util.List<Sensor> sensors = mSensorManager.getSensorList(Sensor.TYPE_ALL);
+            for(Sensor sensor: sensors) {
+                if("com.samsung.sensor.hover_proximity".equals(sensor.getStringType()))
+                    mProximitySensor = sensor;
+            }
+        }
+        if(mProximitySensor == null) {
+            java.util.List<Sensor> sensors = mSensorManager.getSensorList(Sensor.TYPE_ALL);
+            for(Sensor sensor: sensors) {
+                if("com.samsung.sensor.touch_proximity".equals(sensor.getStringType()))
+                    mProximitySensor = sensor;
+            }
+        }
         if (mProximitySensor != null) {
             mProximityThreshold = Math.min(mProximitySensor.getMaximumRange(),
                     TYPICAL_PROXIMITY_THRESHOLD);
@@ -2505,6 +2526,20 @@ final class DisplayPowerController implements AutomaticBrightnessController.Call
         public void onSensorChanged(SensorEvent event) {
             if (mProximitySensorEnabled) {
                 final long time = SystemClock.uptimeMillis();
+                if("com.samsung.sensor.touch_proximity".equals(mProximitySensor.getStringType())) {
+                    int v = (int)event.values[0];
+                    boolean positive = (v <= 4);
+                    android.util.Log.d("PHH", "Samsung sensor changed " + positive + ":" + v);
+                    handleProximitySensorEvent(time, positive);
+                    return;
+                }
+                if("com.samsung.sensor.hover_proximity".equals(mProximitySensor.getStringType())) {
+                    float v = event.values[0];
+                    boolean positive = (v >= 0.5f && v <= 4.5);
+                    android.util.Log.d("PHH", "Samsung hover sensor changed " + positive + ":" + v);
+                    handleProximitySensorEvent(time, positive);
+                    return;
+                }
                 final float distance = event.values[0];
                 boolean positive = distance >= 0.0f && distance < mProximityThreshold;
                 handleProximitySensorEvent(time, positive);
-- 
2.25.1

